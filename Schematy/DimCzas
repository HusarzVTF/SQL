
BEGIN TRAN;

USE Stacja_Paliw;

GO

CREATE SCHEMA Czas;

--Tworzenie schematu Czas dla tabel slownikowych zawierajacych dane odnosnie wymiaru czasu--

GO

IF OBJECT_ID('Czas.Rok') IS NOT NULL
DROP TABLE Czas.Rok;

CREATE TABLE Czas.Rok(ID int IDENTITY PRIMARY KEY, Rok_Num int CHECK (Rok_Num>=2019) not null UNIQUE);

/*
Tworzenie tabeli Rok i sprawdzenie czy juz istnieje  jesli istniala wczesniej jest likwidowana 
(zakladamy, ze zostala stworzona przez pomylke)
*/

INSERT INTO Czas.Rok(Rok_Num) VALUES (2019), (2020), (2021),(2022);

--Wstawienie lat do tabeli rok--

IF OBJECT_ID('Czas.Kwartal') IS NOT NULL
DROP TABLE Czas.Kwartal;

--Sprawdzenie czy tabela kwartal juz istnieje jesli tak to jest likwidowana gdyz zakladamy, ze jesli istniala to przez pomylke--

CREATE TABLE Czas.Kwartal (ID tinyint PRIMARY KEY IDENTITY,Kwartal_Nam varchar(8) not null 
UNIQUE CHECK (Kwartal_Nam IN ('Pierwszy','Drugi','Trzeci','Czwarty') ) );

--Stworzenie tabeli Kwartal--

GO

INSERT INTO Czas.Kwartal(Kwartal_Nam) VALUES('Pierwszy'), ('Drugi'), ('Trzeci'), ('Czwarty');

--Wstawienie wartosci do tabeli kwartal--


IF OBJECT_ID('Czas.Miesiac') IS NOT NULL
DROP TABLE Czas.Miesiac;

--Sprawdzenie czy istnieje tabela Miesiac. Jesli istnieje to jest likwidowana zakladamy, ze jesli istniala to przez pomylke--


CREATE TABLE Czas.Miesiac(ID tinyint PRIMARY KEY IDENTITY, ID_Kw tinyint  CONSTRAINT FK_Kw FOREIGN KEY REFERENCES Czas.Kwartal(ID),
Miesiac_Naz varchar(11) not null UNIQUE CHECK(Miesiac_Naz IN ('Styczen','Luty','Marzec','Kwiecien','Maj','Czerwiec','Lipiec',
'Sierpien','Wrzesien','Pazdziernik','Listopad','Grudzien')));

--Tworzenie tabeli miesiac--

INSERT INTO Czas.Miesiac(ID_Kw, Miesiac_Naz) VALUES
(1,'Styczen'), (1,'Luty'), (1,'Marzec'),
(2,'Kwiecien'),(2,'Maj'),(2,'Czerwiec'),
(3,'Lipiec'),(3,'Sierpien'),(3,'Wrzesien'),
(4,'Pazdziernik'),(4,'Listopad'), (4,'Grudzien');
 
--Wstawienie wartosci do tabeli miesiac--

IF OBJECT_ID('Czas.Kalendarz') IS NOT NULL
DROP TABLE Czas.Kalendarz;

--Sprawdzenie czy istnieje juz tabela Kalendarz jesli tak to jest likwidowana zakladamy, ze jesli istniala to przez pomylke--


CREATE TABLE Czas.Kalendarz
 (ID int PRIMARY KEY IDENTITY, Data date not null UNIQUE, IDRk int  CONSTRAINT FK_Rk FOREIGN KEY REFERENCES Czas.Rok(ID),
 IDM tinyint CONSTRAINT FK_M FOREIGN KEY REFERENCES Czas.Miesiac(ID));

 --Tworzenie tabeli Kalendarz--

 INSERT INTO Czas.Kalendarz(Data,IDRk,IDM) VALUES (CAST(GETDATE() AS Date),(SELECT ID FROM Czas.Rok WHERE Rok_Num=YEAR(GETDATE())),
 (SELECT ID FROM Czas.Miesiac WHERE ID=MONTH(GETDATE())));
 
 --Wstawienie pierwszego rekordu do tabeli Kalendarz. Zakładamy, że wstawienie odbyło się dnia 01.01.2019--

DECLARE @naj date =(SELECT MAX(Data) FROM Czas.Kalendarz)

WHILE  @naj<'2022-01-02' 

BEGIN

INSERT INTO Czas.Kalendarz(Data, IDRk,IDM)

SELECT DATEADD(d,1,(SELECT MAX(Data) FROM Czas.Kalendarz)),
(SELECT ID FROM Czas.ROK WHERE Rok_Num=YEAR(DATEADD(d,1,(SELECT MAX(Data) FROM Czas.Kalendarz)))),
(SELECT ID FROM Czas.Miesiac WHERE ID=MONTH(DATEADD(d,1,(SELECT MAX(Data) FROM Czas.Kalendarz))))
  
IF (SELECT MAX(Data) FROM Czas.Kalendarz)='2022-01-01' 

BREAK

ELSE

CONTINUE

END;

--Pętla, która napełni tabelę Kalendarz danymi do roku 2022--

GO

IF OBJECT_ID('Czas.uIdDaty') IS NOT NULL
DROP FUNCTION  Czas.uIdDaty;
GO
CREATE FUNCTION Czas.uIdDaty (@data date)
RETURNS int
WITH SCHEMABINDING
AS
BEGIN
DECLARE @zm int=(SELECT ID FROM Czas.Kalendarz WHERE Data=@data)
RETURN @zm;
END;

/* Funkcja zwracajaca ID danej daty z tabeli kalendarz */

GO

IF OBJECT_ID('Czas.uDaty') IS NOT NULL
DROP FUNCTION  Czas.uDaty;
GO
CREATE FUNCTION Czas.uDaty (@id int)
RETURNS date
WITH SCHEMABINDING
AS
BEGIN
DECLARE @zm date=(SELECT Data FROM Czas.Kalendarz WHERE ID=@id)
RETURN @zm;
END;
GO

--Funkcja zwracajaca date dla danego ID z tabeli kalendarz--

COMMIT TRAN;



