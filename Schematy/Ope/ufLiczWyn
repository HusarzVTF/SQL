


USE Stacja_Paliw

GO

IF OBJECT_ID('Ope.uf_LiczWyn) IS NOT NULL
DROP FUNCTION Ope.uf_LiczWyn;

CREATE FUNCTION Ope.uf_LiczWyn (@od date, @do date) 

RETURNS real

WITH SCHEMABINDING

AS

BEGIN

DECLARE @dif int=(Year(@do)-Year(@od))

DECLARE @rokPe real=(SELECT SUM(Pensja) FROM Ope.Pracownicy)*12

DECLARE @p int=Year(@od)

DECLARE @pd int=Year(@do)

DECLARE @ostatnidzien date=(SELECT (cast(@p as varchar(4))+ '-12-31')) /*ostatni dzien roku od*/

DECLARE @pierwszydzien date=(SELECT (cast(@pd as varchar(4))+ '-01-01')) /*pierwszy dzien roku do*/


IF @dif>=2

BEGIN

DECLARE @wynik real=((@dif-1)*@rokPe 
+ Datediff(d,dateadd(d,-1,@od),@ostatnidzien)*@rokPe/Czas.uDni_rok(@p)
+ Datediff(d,dateadd(d,-1,@pierwszydzien),@do)*@rokPe/Czas.uDni_rok(@pd))

END

IF @dif=1 

BEGIN

SET @wynik = ( Datediff(d,dateadd(d,-1,@od),@ostatnidzien)*@rokPe/Czas.uDni_rok(@p)
+ Datediff(d,dateadd(d,-1,@pierwszydzien),@do)*@rokPe/Czas.uDni_rok(@pd)) 

END

IF @dif=0 or @dif is null 

BEGIN

SET @wynik = (Datediff(d,dateadd(d,-1,@od),@do)*@rokPe/Czas.uDni_rok(@p))

END

return Round(@wynik,2)

END;

/* Funkcja liczaca koszty netto wynagrodzenia dla wszystkich pracownikow w wskazanym okresie wprowadzanym jako daty w argumenty funkcji. 
Funkcja liczy tylko w porzadku chronologicznym, wstecznie zwraca null. Liczy jak operator between z datami od i do*/


