
USE Stacja_Paliw

GO

IF OBJECT_ID('Ope.uspCashFlow_Forecast') IS NOT NULL
DROP PROC Ope.uspCashFlow_Forecast;

GO

CREATE PROC Ope.uspCashFlow_Forecast ( @od date , @do date, @Param_K_Plac real )

AS

/* sekcja check */

IF @od IS  NULL OR @do IS  NULL OR @od > @do 


THROW 701005, 'Nie podano zakresu dat dla, kt√≥rych ma byc policzony prognozowany cash flow lub jedna z dat wprowadzono niepoprawnie tudziez data od jest wieksza niz do', 1;

IF @od < GETDATE()

THROW 701006,'Daty musza byc z przyszlosci, bo to jest prognoza cash flow', 1;


IF @Param_K_Plac <= 0 OR @Param_K_Plac IS NULL 

THROW 701007,'Parametr modyfikujacy wielkosc kosztow musi byc podany, przy czym  nie moze byc ani zerowy ani ujemny', 1;


/* koniec sekcji check */


DECLARE @CashFlow table(ID smallint PRIMARY KEY IDENTITY, Cash varchar(20) , Flow money);

INSERT INTO @CashFlow (Cash) VALUES('Splata_Zobow'), ('Koszty_Plac'), ('Cash_Out'), ('Naleznosci'), ('Cash_Uwzg_Naleznosci')

DECLARE @Zobow money = ROUND(( 
                              SELECT ISNULL(SUM(KwotaBrutto),0) 
                              FROM Dostawy
                              WHERE TerminZaplaty BETWEEN @od AND @do AND DataZaplaty IS NULL), 2)




DECLARE @K_Plac money = ROUND( ISNULL (Ope.ufKWyplProg( DATEDIFF(d, @od, @do) )* @Param_K_Plac, 0), 2) --srednia z 3 m 


DECLARE @Nalez money = ROUND(( 
                              SELECT ISNULL(SUM(KwotaBrutto),0) 
                              FROM Sprzedaz
                              WHERE TerminZaplaty BETWEEN @od AND @do AND DataZaplaty IS NULL), 2)


UPDATE @CashFlow SET Flow = @Zobow*-1 WHERE Cash = 'Splata_Zobow'

UPDATE @CashFlow SET Flow = @K_Plac*-1 WHERE Cash = 'Koszty_Plac'

UPDATE @CashFlow SET Flow = ROUND((@Zobow + @K_Plac)*-1, 2) WHERE Cash = 'Cash_Out'

UPDATE @CashFlow SET Flow = @Nalez WHERE Cash = 'Naleznosci'

UPDATE @CashFlow SET Flow = ROUND((@Zobow + @K_Plac)*-1 + @Nalez, 2) WHERE Cash = 'Cash_Uwzg_Naleznosci'

SELECT * FROM @CashFlow

/* pocedura zwracajaca prognozowany Cash flow za podany okres */
