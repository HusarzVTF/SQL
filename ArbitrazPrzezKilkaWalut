/*
Czym jest transakcja arbitrażowa: 
Polega na wykorzystaniu rozbieżności pomiędzy ceną jednego dobra względem innego w taki sposób, że możliwa
jest wymiana danego dobra na inne i s powrotem na dobro z którego rozpoczęła się wymiana notując przy tym zysk. 
Zjawisko w poniższym przykładzie dotyczy rynku walutowego, ale może zaistnieć na rynku wszelkich innych dóbr.
Zakładamy, że kurs brany pod uwagę to kurs dzienny. 

Objaśnienia:

Wersja MS SQL 2014

Pominięto tworzenie schematu. System sam utworzy obiekty w domyślnym schemacie dbo. 
*/


IF EXISTS (SELECT * FROM sys.databases WHERE name='Arbitraz')
DROP DATABASE Arbitraz;

/*
Sprawdza czy istnieje baza danych Arbitraz jeśli tak to likwiduje ją 
jeśli istnieje to zakładamy, że istnieje przez pomyłkę.
W wypadku sprawdzenia czy istnieje baza danych nie można użyć funkcji OBJECT_ID, 
ponieważ działa ona tylko na obiektach znajdujących się w schematach.
*/

GO

USE Arbitraz;
 
--Wskazanie na wykorzystanie bazy Arbitraż do utworzenia poniższych obiektów--

GO

IF OBJECT_ID('Kwotowania') IS NOT NULL
DROP TABLE Kwotowania;

-- Sprawdza czy istnieje tabela kwotowania. Jeśli tak to likwiduje ją jeśli istnieje to zakładamy, że istnieje przez pomyłkę--

GO

CREATE TABLE Kwotowania(
ID int  IDENTITY(1,1), 
PierwszaWaluta char(3) ,
DrugaWaluta char(3) ,
Kurs numeric(10,5) not null, 
Data date  PRIMARY KEY(PierwszaWaluta,DrugaWaluta ,Data));

/*
Tworzenie tabeli kwotowania, która będzie przechowywać dane dotyczące kursów walutowych z danego dnia. 
Na tabeli został utworzony klucz główny tak, żeby uniemożliwić wstawienie dwóch kursów walutowych
dla danego dnia (zgodnie z założeniem kursu walutowego na dzień).
*/

GO

INSERT INTO Kwotowania (PierwszaWaluta, DrugaWaluta, Kurs, Data) VALUES
('EUR','USD',1.42800,'1912-10-25'), ('EUR','PLN',4.00000,'1912-10-25'),
('USD','EUR',0.70000,'1912-10-25'), ('USD','PLN',3.00000,'1912-10-25'),
('PLN','EUR',0.25000,'1912-10-25'), ('PLN','USD',0.33000,'1912-10-25'),
('CAD','CHF',1.50000,'2018-04-17'), ('CAD','CHF',1.50000,'2018-01-01'),
('CAD','USD',0.50000,'2018-04-17'), ('CHF','CAD',0.66667,'2018-04-17'),
('CHF','USD',1.66000,'2018-04-17'), ('CNY','CAD',0.66700,'2018-01-01'),
('CNY','USD',0.40000,'2018-01-01'), ('EUR','GBP',0.72310,'2018-04-17'),
('EUR','USD',1.18370,'2018-04-17'), ('GBP','EUR',1.38293,'2018-04-17'),
('GBP','USD',1.63880,'2018-04-17'), ('NZD','USD',1.66000,'2018-04-17'),
('NZD','YEN',0.66667,'2018-04-17'), ('USD','CAD',2.00000,'2018-01-01'),
('USD','CAD',2.00000,'2018-04-17'), ('USD','CHF',0.60241,'2018-04-17'),
('USD','CNY',2.50000,'2018-01-01'),('USD','EUR',0.84481,'2018-04-17'),
('USD','GBP',0.61020,'2018-04-17'), ('USD','NZD',0.60241,'2018-04-17'),
('USD','YEN',2.00000,'2018-04-17'), ('YEN','NZD',1.50000,'2018-04-17'),
('YEN','USD',0.50000,'2018-04-17');

/*
Wstawienie kursów walutowych do tabeli kwotowania. Wszystkie kursy wraz z datami zostały zmyślone. 
Zbieżność z rzeczywistymi danymi jeśli występuje jest przypadkowa
*/

GO

IF OBJECT_ID('uspMozliwyArbitraz') IS NOT NULL
DROP PROC uspMozliwyArbitraz;

--sprawdza czy istnieje już procedura uspMozliwyArbitraz, jeśli tak to likwiduje ją zakłądamy, że została utworzona przez pomyłkę-- 

GO

CREATE PROC uspMozliwyArbitraz (@waluta nvarchar(3), @Data date, @Kwota real)
AS

/*
tworzenie procedury składowej, która po podaniu rodzaju waluty np. EUR i daty sprawdzi czy jest możliwy arbitraż
z tej waluty w danym dniu, ponadto należy podać kwotę w danej walucie jaką można zainwestować
*/

WITH  FirstWaluta_CTE  (PierwszaWaluta ,DrugaWaluta,  Kurs , Data ) AS 

(SELECT PierwszaWaluta,DrugaWaluta,Kurs, Data FROM Kwotowania WHERE Data=@Data AND
PierwszaWaluta=@waluta),	

--CTE w którym trzymany jest wynik zapytania do tabeli kwotowania z wybraną datą i walutą  jako pierwszą w parze walutowej--

  SecondWaluta_CTE  (PierwszaWaluta ,DrugaWaluta,Kurs , Data ) AS 
 
 (SELECT PierwszaWaluta,DrugaWaluta,  Kurs,Data  FROM Kwotowania WHERE Data=@Data AND DrugaWaluta=@waluta),

--CTE w którym trzymany jest wynik zapytania do tabeli kwotowania z wybraną datą i walutą jako drugą w parze walutowej--

 
 NOTWaluta_CTE  (PierwszaWaluta ,DrugaWaluta, Kurs , Data ) AS 

 (SELECT PierwszaWaluta,DrugaWaluta,  Kurs,Data  FROM Kwotowania WHERE Data=@Data AND DrugaWaluta NOT LIKE
 @waluta AND PierwszaWaluta NOT LIKE @waluta)

/*
CTE w którym trzymany jest wynik zapytania do tabeli kwotowania z wybraną datą i walutami innymi niż wybrana zarówno jako pierwsza
i druga w parze walutowej
*/


 SELECT CONCAT( a.PierwszaWaluta,'/', a.DrugaWaluta) AS PierwszaParaWalutowa,  
 a.Kurs, 
 CONCAT(b.PierwszaWaluta,'/',b.DrugaWaluta) AS DrugaparaWalutowa,  
 b.Kurs,a.Kurs*b.Kurs AS KursPrzeliczony,
 CONCAT(c.PierwszaWaluta,'/',c.DrugaWaluta) AS TrzeciaParaWalutowa,
 c.Kurs, 
 a.Kurs*b.Kurs*c.Kurs-1 AS ZyskArbitrazowyNaJedn,
 (a.Kurs*b.Kurs*c.Kurs-1)*@Kwota AS ZyskArbitazowzKwota,
 a.Data
 FROM FirstWaluta_CTE AS a INNER JOIN NOTWaluta_CTE AS b ON a.DrugaWaluta=b.PierwszaWaluta 
 INNER JOIN SecondWaluta_CTE AS c ON a.PierwszaWaluta=c.DrugaWaluta 
 AND b.DrugaWaluta=c.PierwszaWaluta WHERE a.Kurs*b.Kurs*c.Kurs-1>0;
 

/*
wynik zwracany przez procedurę pokazuje kolejno pary walutowe wraz z kursami, które trzeba kolejno wymieniać, 
żeby osiągnąć zysk z arbitrażu wraz z zyskiem na jednostkę waluty początkowej i kwotą zysku z arbitrażu z zainwestowanej kwoty. 
Jeśli procedura zwróci same nazwy kolumn oznacza to, że arbitraż danego dnia z danej waluty nie jest możliwy
*/

